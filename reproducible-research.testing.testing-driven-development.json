{"version":1,"kind":"Article","sha256":"4dd90b3afea283cdd259c154b0c2ba82ef0c77428e0a348862555f915560cdd9","slug":"reproducible-research.testing.testing-driven-development","location":"/reproducible-research/testing/testing-driven-development.md","dependencies":[],"frontmatter":{"title":"Test Driven Development","content_includes_title":false,"authors":[{"nameParsed":{"literal":"The Turing Way Community","given":"The Turing Way","family":"Community"},"name":"The Turing Way Community","id":"contributors-myst-generated-uid-0"}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/the-turing-way/the-turing-way","copyright":"2019-2025","numbering":{"title":{"offset":2}},"edit_url":"https://github.com/the-turing-way/the-turing-way/blob/main/book/website/reproducible-research/testing/testing-driven-development.md","exports":[{"format":"md","filename":"testing-driven-development.md","url":"/build/testing-driven-devel-24f84255c8ba5a6828382a698615b46e.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"One way of ensuring tests are not neglected in a project is to adopt test-driven development.\nThis is an approach in which unit tests are written before the code.\nThe tests thus describe a “contract” that the code is expected to comply with.\nThis ensures that the code will be correct (as far as can be enforced by the testing contract) as written, and it provides a useful framework for thinking about how the code should be designed, what interfaces it should provide, and how its algorithms might work.\nThis can be a very satisfying mental aid in developing tricky algorithms.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wr7WAou9kw"}],"key":"aJZkPn24g9"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Once the tests are written, the code is developed so that it passes all the associated tests.\nTesting the code from the outset ensures that your code is always in a releasable state (as long as it passes the tests!).\nTest driven development forces you to break up your code into small discrete units, to make them easier to test; the code must be modular.\nThe benefits of this were discussed in the section on ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"B5nNiX0mfY"},{"type":"link","kind":"ref","identifier":"rr-testing-unittest","label":"rr-testing-unittest","children":[{"type":"text","value":"unit testing","key":"LVrPpHmfqV"}],"url":"/reproducible-research/testing/testing-unittest","internal":true,"dataUrl":"/reproducible-research.testing.testing-unittest.json","key":"nvtfHGF6E4"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"AxVwGwznXg"}],"key":"A2vet34kMs"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"An alternative development approach is behaviour driven development.\nSimply put, under the test driven development paradigm, we check “has the thing been done correctly?”, whereas under behaviour driven development we test “has the correct thing been done?”.\nIt is more often used in commercial software development to focus development on making the software as simple and effective as possible for users.\nUser experience is very rarely at the heart of code written for the purposes of research, but there are cases where such software is written with a large user-base in mind.\nIn such cases behaviour-driven development is a path worth considering.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"M6iQQe6vQt"}],"key":"AOCP0BZK9F"}],"key":"BQHaKENHfP"}],"key":"cVxffxJgq5"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Runtime testing","url":"/reproducible-research/testing/testing-runtime","group":"The Turing Way"},"next":{"title":"Challenges and exceptional cases in testing","url":"/reproducible-research/testing/testing-exceptions","group":"The Turing Way"}}},"domain":"http://localhost:3001"}