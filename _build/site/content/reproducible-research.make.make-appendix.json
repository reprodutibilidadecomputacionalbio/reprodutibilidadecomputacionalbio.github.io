{"version":1,"kind":"Article","sha256":"02d35b606c5ec609251268aba55ccdef5a37a9d3ec6b8b9751a1f1422d4fb6ce","slug":"reproducible-research.make.make-appendix","location":"/reproducible-research/make/make-appendix.md","dependencies":[],"frontmatter":{"title":"Appendix","content_includes_title":false,"authors":[{"nameParsed":{"literal":"The Turing Way Community","given":"The Turing Way","family":"Community"},"name":"The Turing Way Community","id":"contributors-myst-generated-uid-0"}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/the-turing-way/the-turing-way","copyright":"2019-2025","numbering":{"title":{"offset":2}},"edit_url":"https://github.com/the-turing-way/the-turing-way/blob/main/book/website/reproducible-research/make/make-appendix.md","exports":[{"format":"md","filename":"make-appendix.md","url":"/make-appendix-dee066a131ceea67b270aad1d86cf0a5.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Directed Acyclic Graph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"L7br0087Fv"}],"label":"rr-make-appendix-dag","identifier":"rr-make-appendix-dag","html_id":"rr-make-appendix-dag","key":"V0yE8ivkIh"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"A Directed Acyclic Graph (DAG) is a ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"a0GpKURneT"},{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"graph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tIgo9TpdbX"}],"key":"bTWnKJGEDk"},{"type":"text","value":" of nodes and edges that is:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fv2a8TS91k"}],"key":"krAIyxtDUf"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"directed","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PPKC5jx6sa"}],"key":"d3veJcYn2t"},{"type":"text","value":": edges have a direction and you can only walk the graph in that\ndirection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"TT4PCEOv4P"}],"key":"NPgGI0J3zn"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"acyclic","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"BkwBBugA1x"}],"key":"ASmktuUsQP"},{"type":"text","value":": does not contain cycles: A can’t depend on B when B depends on A.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Qxggz42Vyg"}],"key":"FDh18fHkDN"}],"key":"gYFxyEUX4y"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The latter property is of course quite handy for a build system. More\ninformation on DAGs can be found on\n","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"O9NHC7aFUm"},{"type":"link","url":"https://en.wikipedia.org/wiki/Directed_acyclic_graph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Wikipedia","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"XEAyOaGwjp"}],"urlSource":"https://en.wikipedia.org/wiki/Directed_acyclic_graph","data":{"page":"Directed_acyclic_graph","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"o87eDDWfyl"},{"type":"text","value":".","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ltvbvFq9qU"}],"key":"xTIPDtrUo5"},{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Installing Make","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"NgI1AOF08g"}],"label":"rr-make-appendix-installing","identifier":"rr-make-appendix-installing","html_id":"rr-make-appendix-installing","key":"CIBx370mYj"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"First, check if you have GNU Make installed already. In a terminal type:","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"xnpwQlYZMk"}],"key":"EE93oycO7I"},{"type":"code","lang":"bash","value":"$ make","position":{"start":{"line":22,"column":1},"end":{"line":24,"column":1}},"key":"lIuJV0rnnF"},{"type":"paragraph","position":{"start":{"line":26,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"If you get ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"ZAbQxeRonD"},{"type":"inlineCode","value":"make: command not found","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"TOKBHQ4tHz"},{"type":"text","value":" (or similar), you don’t have Make. If\nyou get ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"fE0donkBWo"},{"type":"inlineCode","value":"make: *** No targets specified and no makefile found.  Stop.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"YGtuJQ4KUa"},{"type":"text","value":" you\ndo have Make.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"FdaJMMyf1L"}],"key":"YlSLCmu8Lv"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"We’ll be using ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"e1IeXEqS7E"},{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"GNU Make","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"jsS5OvqSmS"}],"key":"Fqd3d8hpF4"},{"type":"text","value":" in this tutorial. Verify that this is what you\nhave by typing:","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"q0cEpNNzVw"}],"key":"UEomzLoD6P"},{"type":"code","lang":"bash","value":"$ make --version","position":{"start":{"line":33,"column":1},"end":{"line":35,"column":1}},"key":"Ye0hL009R3"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"If you don’t have GNU Make but have the BSD version, some things might not\nwork as expected and we recommend installing GNU Make.","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"Ym1IS0oOY9"}],"key":"Wm4nUjUmCK"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"To install GNU Make, please follow these instructions:","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"a2sLpQcvjE"}],"key":"uL7JFFbU0n"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":42,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":42,"column":1},"end":{"line":53,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"strong","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Linux","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"J9e16j3B8p"}],"key":"DwzkxOd6tW"},{"type":"text","value":": Use your package manager to install Make. For instance on Arch\nLinux:","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"R7WUBSZuWV"}],"key":"NJ4NFPvWon"},{"type":"code","lang":"bash","value":"$ sudo pacman -S make","position":{"start":{"line":45,"column":1},"end":{"line":47,"column":1}},"key":"CNqP1MNA7y"},{"type":"paragraph","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"Ubuntu:","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"key":"t1ZGOcfGa3"}],"key":"SOSXjT33F7"},{"type":"code","lang":"bash","value":"$ sudo apt-get install build-essential","position":{"start":{"line":50,"column":1},"end":{"line":52,"column":1}},"key":"lD7sIY4eVp"}],"key":"SjSbrkAHGg"},{"type":"listItem","spread":true,"position":{"start":{"line":54,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"strong","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"MacOS","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"HUTRxcKXy0"}],"key":"FmiwVhnq1j"},{"type":"text","value":": If you have ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"Mi5dkYUzA2"},{"type":"link","url":"https://brew.sh/","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"Homebrew","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"LBzloIsZKZ"}],"urlSource":"https://brew.sh/","key":"PAod8hjkpG"},{"type":"text","value":" installed, it’s simply:","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"YFhxpguYWs"}],"key":"ibGwu6rTJh"},{"type":"code","lang":"bash","value":"$ brew install make","position":{"start":{"line":56,"column":1},"end":{"line":58,"column":1}},"key":"OLOTqSKQJW"},{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"If you have a builtin Make implementation, please ensure that it’s GNU Make\nby checking ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"JVE2xcWDFa"},{"type":"inlineCode","value":"make --version","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"IaS36mQmMJ"},{"type":"text","value":".","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"EHGNDCfPdd"}],"key":"HH1jjtn2IB"}],"key":"nDnSBmhfHE"}],"key":"YWh7mHCYSD"},{"type":"heading","depth":2,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Advanced: Generating Rules using Call","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"PNh57oZnoA"}],"label":"rr-make-appendix-advancedgr","identifier":"rr-make-appendix-advancedgr","html_id":"rr-make-appendix-advancedgr","key":"R0zNqJpnwY"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"This section continues the tutorial above and demonstrates a feature of Make\nfor automatic generation of rules.","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"dCF0jH97BM"}],"key":"Hqc2TdPpcq"}],"key":"OfGx9jzVEA"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"In a data science pipeline, it may be quite common to apply multiple scripts\nto the same data (for instance when you’re comparing methods or testing\ndifferent parameters). In that case, it can become tedious to write a separate\nrule for each script when only the script name changes. To simplify this\nprocess, we can let Make expand a so-called ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"drzAtrX2x8"},{"type":"link","url":"https://www.gnu.org/software/make/manual/make.html#Canned-Recipes","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"canned","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"VdDBPyBhBt"}],"key":"SytdIQyP7k"},{"type":"text","value":"\nrecipe","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"NFXXfFGNvE"}],"urlSource":"https://www.gnu.org/software/make/manual/make.html#Canned-Recipes","key":"Rv04DAFBtl"},{"type":"text","value":".","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"NAnL9HngPN"}],"key":"infRghneZj"},{"type":"paragraph","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"children":[{"type":"text","value":"To follow along, switch to the ","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"pDVqB7Jngj"},{"type":"inlineCode","value":"canned","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"cdR8oWIUMd"},{"type":"text","value":" branch:","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"pLGlxzNQeZ"}],"key":"rTg8W9GnrN"},{"type":"code","lang":"bash","value":"$ make clean\n$ git stash --all        # note the '--all' flag so we also stash the Makefile\n$ git checkout canned","position":{"start":{"line":78,"column":1},"end":{"line":82,"column":1}},"key":"rttxsjkdml"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":88,"column":1}},"children":[{"type":"text","value":"On this branch you’ll notice that there is a new script in the ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"PQgX3Jrvi2"},{"type":"strong","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"scripts","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"qiP1c6h6eC"}],"key":"fQszXHcWK2"},{"type":"text","value":"\ndirectory called ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"bNGZ5Z4pYf"},{"type":"inlineCode","value":"generate_qqplot.py","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"oLOww64LLA"},{"type":"text","value":". This script works similarly to the\n","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"FZuDE0FIwr"},{"type":"inlineCode","value":"generate_histogram.py","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"SUx5Vobb2f"},{"type":"text","value":" script (it has the same command line syntax), but it\ngenerates a ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"x5wqzLcSKD"},{"type":"link","url":"https://en.wikipedia.org/wiki/Q%E2%80%93Q_plot","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"QQ-plot","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"dNbTGxc2z7"}],"urlSource":"https://en.wikipedia.org/wiki/Q%E2%80%93Q_plot","data":{"page":"Q%E2%80%93Q_plot","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"m1K0W0BWLV"},{"type":"text","value":". The\n","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"QHBG2md0Ot"},{"type":"strong","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"report.tex","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"yyxCT5oJL7"}],"key":"slEKI1MbUL"},{"type":"text","value":" file has also been updated to incorporate these plots.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"cnYKE4O2Gx"}],"key":"v5N8d9BAM4"},{"type":"paragraph","position":{"start":{"line":90,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"After switching to the ","position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"key":"w96ZCDbS0I"},{"type":"inlineCode","value":"canned","position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"key":"fc9dDBsKUb"},{"type":"text","value":" branch there will be a Makefile in the\nrepository that contains a separate rule for generating the QQ-plots. This\nMakefile looks like this:","position":{"start":{"line":90,"column":1},"end":{"line":90,"column":1}},"key":"uX36t9GV07"}],"key":"UXwQoYQryb"},{"type":"code","lang":"makefile","value":"# Makefile for analysis report\n#\n\nALL_CSV = $(wildcard data/*.csv)\nDATA = $(filter-out $(wildcard data/input_file_*.csv),$(ALL_CSV))\nHISTOGRAMS = $(patsubst data/%.csv,output/figure_%.png,$(DATA))\nQQPLOTS = $(patsubst data/%.csv,output/qqplot_%.png,$(DATA))\n\n.PHONY: all clean\n\nall: output/report.pdf\n\n$(HISTOGRAMS): output/histogram_%.png: data/%.csv scripts/generate_histogram.py\n\tpython scripts/generate_histogram.py -i $< -o $@\n\n$(QQPLOTS): output/qqplot_%.png: data/%.csv scripts/generate_qqplot.py\n\tpython scripts/generate_qqplot.py -i $< -o $@\n\noutput/report.pdf: report/report.tex $(FIGURES)\n\tcd report/ && pdflatex report.tex && mv report.pdf ../$@\n\nclean:\n\trm -f output/report.pdf\n\trm -f $(HISTOGRAMS) $(QQPLOTS)","position":{"start":{"line":94,"column":1},"end":{"line":119,"column":1}},"key":"lDps8iZUbK"},{"type":"paragraph","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"children":[{"type":"text","value":"You’ll notice that the rules for histograms and QQ-plots are very similar.","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"N3rWbnKCGm"}],"key":"DoJTTDs42Y"},{"type":"paragraph","position":{"start":{"line":123,"column":1},"end":{"line":127,"column":1}},"children":[{"type":"text","value":"As the number of scripts that you want to run on your data grows, this may\nlead to a large number of rules in the Makefile that are almost exactly the\nsame. We can simplify this by creating a ","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"SPJOpAfJv4"},{"type":"link","url":"https://www.gnu.org/software/make/manual/html_node/Canned-Recipes.html","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"children":[{"type":"text","value":"canned\nrecipe","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"Z7qt0NijzD"}],"key":"LeorSG4p4f"}],"urlSource":"https://www.gnu.org/software/make/manual/html_node/Canned-Recipes.html","key":"ziRZahySeO"},{"type":"text","value":"\nthat takes both the name of the script and the name of the genre as input:","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"AzhovUPFZH"}],"key":"UB41ccAtLC"},{"type":"code","lang":"makefile","value":"define run-script-on-data\noutput/$(1)_$(2).png: data/$(2).csv scripts/generate_$(1).py\n\tpython scripts/generate_$(1).py -i $$< -o $$@\nendef","position":{"start":{"line":129,"column":1},"end":{"line":134,"column":1}},"key":"K3QcXhAR8H"},{"type":"paragraph","position":{"start":{"line":136,"column":1},"end":{"line":142,"column":1}},"children":[{"type":"text","value":"Note that in this recipe we use ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"XDOAxdBShs"},{"type":"inlineCode","value":"$(1)","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"c5xMwvNCKJ"},{"type":"text","value":" for either ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"wSNonebCZv"},{"type":"inlineCode","value":"histogram","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"ch1grmWv7m"},{"type":"text","value":" or\n","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"DxMg9awRpb"},{"type":"inlineCode","value":"qqplot","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"jTlceKkZsy"},{"type":"text","value":" and ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"bd0yFpSVtc"},{"type":"inlineCode","value":"$(2)","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"j3I7FBVrWe"},{"type":"text","value":" for the genre. These correspond to the expected\nfunction arguments to the ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"KzvPFGsBjr"},{"type":"inlineCode","value":"run-script-on-data","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"MS7RgSkBxs"},{"type":"text","value":" canned recipe. Also, notice\nthat we use ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"xsjgIZ2tZo"},{"type":"inlineCode","value":"$$<","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"pm01jULxpJ"},{"type":"text","value":" and ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"VkG4cEybMh"},{"type":"inlineCode","value":"$$@","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"RRBGfUIg3o"},{"type":"text","value":" in the actual recipe, with two ","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"HYyc4bw4ee"},{"type":"inlineCode","value":"$","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"nrRYthBY3K"},{"type":"text","value":" symbols\nfor escaping. To actually create all the targets, we need a line that calls\nthis canned recipe.  In our case, we use a double for loop over the genres and\nthe scripts:","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"HGVT1p8WKH"}],"key":"MU3XuTyWlu"},{"type":"code","lang":"makefile","value":"$(foreach genre,$(GENRES),\\\n\t$(foreach script,$(SCRIPTS),\\\n\t\t$(eval $(call run-script-on-data,$(script),$(genre))) \\\n\t) \\\n)","position":{"start":{"line":144,"column":1},"end":{"line":150,"column":1}},"key":"ok2Uxurl1D"},{"type":"paragraph","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"children":[{"type":"text","value":"In these lines the ","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"key":"uXmhPxfeEt"},{"type":"inlineCode","value":"\\","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"key":"yHbpnrrgZ4"},{"type":"text","value":" character is used for continuing long lines.","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"key":"YQmrgFjRo8"}],"key":"SYyKJ3p3NK"},{"type":"paragraph","position":{"start":{"line":154,"column":1},"end":{"line":154,"column":1}},"children":[{"type":"text","value":"The full Makefile then becomes:","position":{"start":{"line":154,"column":1},"end":{"line":154,"column":1}},"key":"mFL07Fb55H"}],"key":"Qb2BPzu5sd"},{"type":"code","lang":"makefile","value":"# Makefile for analysis report\n#\n\nALL_CSV = $(wildcard data/*.csv)\nDATA = $(filter-out $(wildcard data/input_file_*.csv),$(ALL_CSV))\nHISTOGRAMS = $(patsubst %,output/histogram_%.png,$(GENRES))\nQQPLOTS = $(patsubst %,output/qqplot_%.png,$(GENRES))\n\nGENRES = $(patsubst data/%.csv,%,$(DATA))\nSCRIPTS = histogram qqplot\n\n.PHONY: all clean\n\nall: output/report.pdf\n\ndefine run-script-on-data\noutput/$(1)_$(2).png: data/$(2).csv scripts/generate_$(1).py\n\tpython scripts/generate_$(1).py -i $$< -o $$@\nendef\n\n$(foreach genre,$(GENRES),\\\n\t$(foreach script,$(SCRIPTS),\\\n\t\t$(eval $(call run-script-on-data,$(script),$(genre)))\\\n\t)\\\n)\n\noutput/report.pdf: report/report.tex $(HISTOGRAMS) $(QQPLOTS)\n\tcd report/ && pdflatex report.tex && mv report.pdf ../$@\n\nclean:\n\trm -f output/report.pdf\n\trm -f $(HISTOGRAMS) $(QQPLOTS)","position":{"start":{"line":156,"column":1},"end":{"line":189,"column":1}},"key":"G1FEsVTXPK"},{"type":"paragraph","position":{"start":{"line":191,"column":1},"end":{"line":194,"column":1}},"children":[{"type":"text","value":"Note that we’ve added a ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"giNrnEYWCj"},{"type":"inlineCode","value":"SCRIPTS","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"gMH1u4c7Ug"},{"type":"text","value":" variable with the ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"NGEjOCVDpw"},{"type":"inlineCode","value":"histogram","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"IrN3t2D9Zn"},{"type":"text","value":" and\n","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"lUxd4jKeo9"},{"type":"inlineCode","value":"qqplot","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"STBISSRf8p"},{"type":"text","value":" names. If we were to add another script that follows the same\npattern as these two, we would only need to add it to the ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"bD0sQvhIjH"},{"type":"inlineCode","value":"SCRIPTS","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"c6gP3sFdER"},{"type":"text","value":"\nvariable.","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"o34IIhOsZC"}],"key":"YSq34R0Wfp"},{"type":"paragraph","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"text","value":"To build all of this, run","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"TBb5SfTap8"}],"key":"fC3a9NTmOf"},{"type":"code","lang":"bash","value":"$ make -j 4","position":{"start":{"line":198,"column":1},"end":{"line":200,"column":1}},"key":"XRrMsErO1o"}],"key":"YWQ1Hf0SeK"}],"key":"d3tAl9TKRh"},"references":{"cite":{"order":[],"data":{}}}}