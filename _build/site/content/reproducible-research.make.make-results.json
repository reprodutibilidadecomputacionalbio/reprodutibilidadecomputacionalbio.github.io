{"version":1,"kind":"Article","sha256":"2d67d75b806007d357f2d7a790dd213eeb5788d13f48231cfcf11cdf64233d09","slug":"reproducible-research.make.make-results","location":"/reproducible-research/make/make-results.md","dependencies":[],"frontmatter":{"title":"Including numerical results and tables","content_includes_title":false,"authors":[{"nameParsed":{"literal":"The Turing Way Community","given":"The Turing Way","family":"Community"},"name":"The Turing Way Community","id":"contributors-myst-generated-uid-0"}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/the-turing-way/the-turing-way","copyright":"2019-2025","numbering":{"title":{"offset":2}},"edit_url":"https://github.com/the-turing-way/the-turing-way/blob/main/book/website/reproducible-research/make/make-results.md","exports":[{"format":"md","filename":"make-results.md","url":"/make-results-5346420edb0feca4ef03a41b8328ba4c.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At this point you may be thinking “That’s so cool that I can now include figures\ninto my manuscripts! But how exactly does this work for numerical results?”","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xwBXTmIfor"}],"key":"C43YXHha3A"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The reproducible paper linked above shows one way of doing it:\nAfter the results are computed, they are written out in the form of a LaTeX\ntable.\nHere is how one of these tables looks like right after it was computed:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xXPgKLlrdV"}],"key":"aSoXLAxFFS"},{"type":"code","lang":"latex","value":"\\begin{tabular}{lrrr|rrrr}\nProperty & HypoParsr & Sniffer & Suitability & Pattern & Type & No Tie & Full\\\\\n\\hline\nDelimiter & 87.48 & 86.82 & 65.41 & 92.61 & 88.33 & 91.38 & \\textbf{94.92}\\\\\nQuotechar & 82.90 & 92.36 & 44.60 & 95.23 & 90.10 & 93.80 & \\textbf{97.36}\\\\\nEscapechar & 87.96 & 94.37 & 74.85 & 97.95 & 96.26 & 95.44 & \\textbf{99.25}\\\\\nOverall & 80.60 & 85.45 & 38.19 & 90.99 & 83.61 & 90.61 & \\textbf{93.75}\\\\\n\\hline\n\\end{tabular}","position":{"start":{"line":12,"column":1},"end":{"line":22,"column":1}},"key":"rdI85jsyDe"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"To include this table into your manuscript, you can use LaTeX’s ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"yauEyTwEg6"},{"type":"inlineCode","value":"\\input{}","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"TaZJwb642U"},{"type":"text","value":"\nfunction. If the file with the table is called ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"tup1yQEq3L"},{"type":"inlineCode","value":"mytable.tex","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"pZ7sAarmG3"},{"type":"text","value":", this command\ncan insert it into your manuscript:","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"y30SDkxkeK"}],"key":"AlUSkTWSCT"},{"type":"code","lang":"latex","value":"\\begin{table}\n\\input{mytable}\n\\end{table}","position":{"start":{"line":28,"column":1},"end":{"line":32,"column":1}},"key":"SYgNMItUiP"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"An alternative is to make use of variables.\nInstead of creating a table in a separate file, you can write a table skeleton\nand populate it with variables.\nThe results you compute are associated with the variables, and once your\nmanuscript is compiled, variables are exchanged for real numerical results.\nHere is how such a table looks like in your manuscript:","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"HE6zqE4Ijt"}],"key":"xOpqox0VfS"},{"type":"code","lang":"latex","value":"\\begin{table}\n    \\begin{tabular*}{ccc}\n        \\textbf{Variable} & \\textbf{Mean}   & \\textbf{Std. deviation} \\\n        \\hline\n        Variable 1        & \\var1mean       & \\var1std                \\\n        Variable 2        & \\var2mean       & \\var2std                \\\n    \\end{tabular*}\n\\end{table}","position":{"start":{"line":41,"column":1},"end":{"line":50,"column":1}},"key":"G2NNu9nLGU"},{"type":"paragraph","position":{"start":{"line":52,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"Ỳou may notice that ","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"CEEB35CFIM"},{"type":"inlineCode","value":"\\var1mean","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"AHCReMQhSk"},{"type":"text","value":" is no standard LaTeX command: It is a variable\nthat you can define yourself!\nHow is this done?\nHave your script print the results you compute within a ","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"s81SgUJW12"},{"type":"inlineCode","value":"\\newcommand{}{}","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"aeDhy7xCZX"},{"type":"text","value":"\ndefinition into a file, for example like this (simplified Python example):","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"oKeDDJS9rt"}],"key":"rjIV9pIIG3"},{"type":"code","lang":"python","value":"# this loops to data vectors of two variables (data1, data2), compute the\n# mean and standard deviation, and print the results together with the\n# variable name ('var1', 'var2')\nfor name, data in (['var1', data1], ['var2', data2]):\n    mean = np.mean(data)\n    std = np.mean(data)\n    print('\\\\newcommand{\\\\%s }{ %f }' % (name + 'mean', mean))\n    print('\\\\newcommand{\\\\%s }{ %f }' % (name + 'std', std))","position":{"start":{"line":58,"column":1},"end":{"line":67,"column":1}},"key":"hxFukWsZ2O"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":77,"column":1}},"children":[{"type":"text","value":"Let’s say the mean of the first dataset is 9.2, the definition would look like\nthis: ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"q4EWRE6Ed4"},{"type":"inlineCode","value":"\\newcommand{\\var1mean}{9.2}","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"GpCvLmFGRU"},{"type":"text","value":".\nNote that this example uses Python, but you can use any language or method you\nare familiar with to print definitions like this.\nWith this definition, LaTeX exchanges the table cell with ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"Rv9OS7c7Qk"},{"type":"inlineCode","value":"\\var1mean","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"x7oYP4W6p4"},{"type":"text","value":" with the\nnumeric result from the computation.\nYou can capture the definitions and write them to a file using redirection with\n","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"pfHUSBlTun"},{"type":"inlineCode","value":">","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"iULMzosc6B"},{"type":"text","value":".\nIn this example, we write it to a file called ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"uRlLFyMlNf"},{"type":"inlineCode","value":"results_def.tex","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"pcQZgK0iXi"}],"key":"lSEVfTZzDd"},{"type":"code","lang":"makefile","value":"results_def.tex: code/make_summary_stats.py\n\tpython code/make_summary_stats.py > results_def.tex","position":{"start":{"line":79,"column":1},"end":{"line":82,"column":1}},"key":"xeO1qluMd5"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"As an alternative to ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"CQjqW3DTGw"},{"type":"inlineCode","value":">","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"Eozx1bKmCI"},{"type":"text","value":", you could also redirect the results using the Unix\n","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"yNUOL8mfqd"},{"type":"link","url":"https://en.wikipedia.org/wiki/Pipeline_(Unix)","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"pipe","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"HZgocPimAl"}],"urlSource":"https://en.wikipedia.org/wiki/Pipeline_(Unix)","data":{"page":"Pipeline_(Unix)","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"y2kQIUx34R"},{"type":"text","value":" and the\n","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"OOFI6Qi3Ol"},{"type":"link","url":"https://en.wikipedia.org/wiki/Tee_(command)","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"tee","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"xJYrLSfo96"}],"urlSource":"https://en.wikipedia.org/wiki/Tee_(command)","data":{"page":"Tee_(command)","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"AnjNDvdIbL"},{"type":"text","value":" command\n(","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"ohDKc8BOrg"},{"type":"inlineCode","value":"python code/make_summary_stats.py | tee results_def.tex","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"TzjAJ9IipB"},{"type":"text","value":").\nThis will not only redirect the output of the script to a file, but also print\nthem into your terminal.\nThis helpful trick can help you observe whether everything works as expected\nduring the execution of your script.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"EiNrVw5AKl"}],"key":"ejSlhNHFRt"},{"type":"paragraph","position":{"start":{"line":93,"column":1},"end":{"line":94,"column":1}},"children":[{"type":"text","value":"Finally, use the ","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"MoTO7a15Ba"},{"type":"inlineCode","value":"input{}","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"bFBBnwq5fI"},{"type":"text","value":" command to include the new variables in your\nmanuscript and the variables in the tables:","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"frwgKWC2oR"}],"key":"Ldy3yr5ca3"},{"type":"code","lang":"latex","value":"\\begin{document}\n\\input{results_def.tex}","position":{"start":{"line":96,"column":1},"end":{"line":99,"column":1}},"key":"QQ5k7TNYhm"},{"type":"paragraph","position":{"start":{"line":101,"column":1},"end":{"line":104,"column":1}},"children":[{"type":"text","value":"The examples shown here are simplistic, but with a bit of thinking, you can\nmake sure to include results into your manuscript just as they are computed.\nThis helps you (no mistakes copying results to tables, yay!) and makes your\nresearch more accessible and reproducible.","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"Nnn6m5iANf"}],"key":"Va79S4vN3Y"}],"key":"UIQlEna94o"}],"key":"gcdl7HQJkY"},"references":{"cite":{"order":[],"data":{}}}}