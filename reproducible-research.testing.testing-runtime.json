{"version":1,"kind":"Article","sha256":"3648659d6b110ef7d5d6c9beedb5c21ff71231946b8513a26ec4c831ab15535f","slug":"reproducible-research.testing.testing-runtime","location":"/reproducible-research/testing/testing-runtime.md","dependencies":[],"frontmatter":{"title":"Runtime testing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"The Turing Way Community","given":"The Turing Way","family":"Community"},"name":"The Turing Way Community","id":"contributors-myst-generated-uid-0"}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/the-turing-way/the-turing-way","copyright":"2019-2025","numbering":{"title":{"offset":2}},"edit_url":"https://github.com/the-turing-way/the-turing-way/blob/main/book/website/reproducible-research/testing/testing-runtime.md","exports":[{"format":"md","filename":"testing-runtime.md","url":"/build/testing-runtime-98b73b2e7bd26c1342edc166468315ba.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Runtime tests are tests that run as part of the program itself.\nThey may take the form of checks within the code, as shown below:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"daH7y4GCp0"}],"key":"NW3eTClD4l"},{"type":"code","lang":"","value":"population = population + people_born - people_died\n\n// test that the population is positive\nif (population < 0):\n  error( 'The number of people can never be negative' )","position":{"start":{"line":6,"column":1},"end":{"line":12,"column":1}},"key":"hlWG6Gp4PL"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Another example of a use of runtime tests is internal checks within functions that verify that their inputs and outputs are valid, as shown below:","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"IHuY4WHpxG"}],"key":"vNgaThcR54"},{"type":"code","lang":"","value":"function add_arrays( array1, array2 ):\n\n// test that the arrays have the same size\nif (array1.size() != array2.size()):\n  error( 'The arrays have different sizes!' )\n\noutput = array1 + array2\n\nif (output.size() != array1.size()):\n  error( 'The output array has the wrong size!'' )\n\nreturn output","position":{"start":{"line":15,"column":1},"end":{"line":28,"column":1}},"key":"NFruC9ybLU"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Advantages of runtime testing:","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"zZyREnGwwZ"}],"key":"nFiN6lsbOF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":31,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Run within the program, so can catch problems caused by logic errors or edge cases.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"vTjAY38U43"}],"key":"WECJeezplS"},{"type":"listItem","spread":true,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Makes it easier to find the cause of the bug by catching problems early.","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"uYMZwvi4kF"}],"key":"ZnGAb1oJJT"},{"type":"listItem","spread":true,"position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Catching problems early also helps prevent them escalating into catastrophic failures. It minimises the blast radius.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"h1FG15QN7c"}],"key":"s0309GMiHh"}],"key":"gPb5Nms4Wk"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Disadvantages of runtime testing:","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"rcKq0LuqED"}],"key":"W01DqZIUu8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":37,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Tests can slow down the program.","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"WnDVaEQK1x"}],"key":"XW9O7xT4Jw"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"What is the right thing to do if an error is detected? How should this error be reported? Exceptions are a recommended route to go with this.","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"k7tL21KLdZ"}],"key":"qSB73VoCiT"}],"key":"kZvoR3vYaw"}],"key":"S4EhGEz6J5"}],"key":"VPdUMyUiYF"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Acceptance and Regression Testing","url":"/reproducible-research/testing/testing-acceptance-regression","group":"The Turing Way"},"next":{"title":"Test Driven Development","url":"/reproducible-research/testing/testing-driven-development","group":"The Turing Way"}}},"domain":"http://localhost:3001"}